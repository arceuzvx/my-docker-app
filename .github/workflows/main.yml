name: Build, Scan, and Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]

# -----------------------------------------------------------------
# IMPORTANT: UPDATE THESE VALUES FOR YOUR PROJECT
# -----------------------------------------------------------------
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: asia-south1 # The region of your Artifact Registry
  SERVICE: my-flask-app      # The name of your Cloud Run service
  REGION: asia-south1      # The region for your Cloud Run service
# -----------------------------------------------------------------

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Authenticate to Google Cloud
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:latest .

      # Scan the image for vulnerabilities
      - name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:latest'
          format: 'table'
          severity: 'CRITICAL,HIGH'

      # Configure Docker to use the gcloud CLI
      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      # Push the Docker image to Google Artifact Registry
      - name: Push Docker image
        run: docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:latest

      # Deploy the image to Cloud Run
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:latest
          # Allow unauthenticated access to the service
          flags: --allow-unauthenticated

      # Show the URL of the deployed service
      - name: Show Output
        run: echo "Deployed to ${{ steps.deploy.outputs.url }}"